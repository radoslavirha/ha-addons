name: CI

on:
  push:
  workflow_dispatch:

jobs:
  changes:
    name: Check addon changes
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      addons: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: ðŸ“‚ Detect changed files
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: .github/paths-filter.yaml

  lint-addon-code:
    name: Lint ${{ matrix.addon }} addon code
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.addons != '[]' }}
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.changes.outputs.addons) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Prepare repository
        uses: ./.github/actions/prepare
        with:
          TARGET_ADDON: ${{ matrix.addon }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run lint
        run: pnpm --filter ./addons/${{ matrix.addon }} lint

  build-addon-code:
    name: Build ${{ matrix.addon }} addon code
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.addons != '[]' }}
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.changes.outputs.addons) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Prepare repository
        uses: ./.github/actions/prepare
        with:
          TARGET_ADDON: ${{ matrix.addon }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run build
        run: pnpm --filter ./addons/${{ matrix.addon }} build

  test-addon-code:
    name: Test ${{ matrix.addon }} addon code
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.addons != '[]' }}
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.changes.outputs.addons) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Prepare repository
        uses: ./.github/actions/prepare
        with:
          TARGET_ADDON: ${{ matrix.addon }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: pnpm --filter ./addons/${{ matrix.addon }} test

  lint-addon-configuration:
    name: Lint ${{ matrix.addon }} addon configuration
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.addons != '[]' }}
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.changes.outputs.addons) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run addon configuration lint
        uses: frenck/action-addon-linter@v2
        with:
          path: ./addons/${{ matrix.addon }}

  lint-addon-dockerfile:
    name: Lint ${{ matrix.addon }} addon Dockerfile
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.addons != '[]' }}
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.changes.outputs.addons) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run addon Dockerfile lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./addons/${{ matrix.addon }}/Dockerfile